// <auto-generated />
using System;
using BusTicketsApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BusTicketsApp.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241215192337_SchemaAdjustments")]
    partial class SchemaAdjustments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BusTicketsApp.Server.Data.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BusNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("CarrierId")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BusNumber")
                        .IsUnique();

                    b.HasIndex("CarrierId");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LengthInKm")
                        .HasColumnType("integer");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ShortName")
                        .IsUnique();

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.RouteStop", b =>
                {
                    b.Property<int>("RouteId")
                        .HasColumnType("integer");

                    b.Property<byte>("Sequence")
                        .HasColumnType("smallint");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<int>("KmFromPrevStop")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("TimeFromPrevStop")
                        .HasColumnType("interval");

                    b.HasKey("RouteId", "Sequence");

                    b.HasIndex("CityId");

                    b.ToTable("RouteStops");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EndCityId")
                        .HasColumnType("integer");

                    b.Property<byte>("NumberOfPassengers")
                        .HasColumnType("smallint");

                    b.Property<int>("StartCityId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("TripId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EndCityId");

                    b.HasIndex("StartCityId");

                    b.HasIndex("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Timetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RouteId")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("TimeOfArrival")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("TimeOfDeparture")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RouteId", "DayOfWeek", "TimeOfDeparture")
                        .IsUnique();

                    b.ToTable("Timetables");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BusId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("PricePerKm")
                        .HasColumnType("numeric");

                    b.Property<int>("TimetableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("TimetableId");

                    b.HasIndex("Date", "TimetableId")
                        .IsUnique();

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.TripSeats", b =>
                {
                    b.Property<int>("TripId")
                        .HasColumnType("integer");

                    b.Property<int>("RouteId")
                        .HasColumnType("integer");

                    b.Property<byte>("Sequence")
                        .HasColumnType("smallint");

                    b.Property<byte>("AvailableSeats")
                        .HasColumnType("smallint");

                    b.HasKey("TripId", "RouteId", "Sequence");

                    b.HasIndex("RouteId", "Sequence");

                    b.ToTable("TripSeats");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Bus", b =>
                {
                    b.HasOne("BusTicketsApp.Server.Data.Carrier", "Carrier")
                        .WithMany("Buses")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrier");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.RouteStop", b =>
                {
                    b.HasOne("BusTicketsApp.Server.Data.City", "City")
                        .WithMany("RouteStops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusTicketsApp.Server.Data.Route", "Route")
                        .WithMany("RouteStops")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Ticket", b =>
                {
                    b.HasOne("BusTicketsApp.Server.Data.City", "EndCity")
                        .WithMany()
                        .HasForeignKey("EndCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketsApp.Server.Data.City", "StartCity")
                        .WithMany()
                        .HasForeignKey("StartCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketsApp.Server.Data.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketsApp.Server.Data.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EndCity");

                    b.Navigation("StartCity");

                    b.Navigation("Trip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Timetable", b =>
                {
                    b.HasOne("BusTicketsApp.Server.Data.Route", "Route")
                        .WithMany("Timetables")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Trip", b =>
                {
                    b.HasOne("BusTicketsApp.Server.Data.Bus", "Bus")
                        .WithMany("Trips")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusTicketsApp.Server.Data.Timetable", "Timetable")
                        .WithMany("Trips")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Timetable");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.TripSeats", b =>
                {
                    b.HasOne("BusTicketsApp.Server.Data.Trip", null)
                        .WithMany("TripSeats")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusTicketsApp.Server.Data.RouteStop", "RouteStop")
                        .WithMany("TripSeats")
                        .HasForeignKey("RouteId", "Sequence")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RouteStop");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Bus", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Carrier", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.City", b =>
                {
                    b.Navigation("RouteStops");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Route", b =>
                {
                    b.Navigation("RouteStops");

                    b.Navigation("Timetables");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.RouteStop", b =>
                {
                    b.Navigation("TripSeats");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Timetable", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.Trip", b =>
                {
                    b.Navigation("Tickets");

                    b.Navigation("TripSeats");
                });

            modelBuilder.Entity("BusTicketsApp.Server.Data.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
